apply plugin: 'com.android.application'

ext.versions = [
		// Android
		targetSdkVersion: 27, //not 28 because of crash: java.lang.IllegalArgumentException: Invalid Region.Op - only INTERSECT and DIFFERENCE are allowed
		minSdkVersion   : 21,
		buildtools      : "28.0.3",
		support         : "27.1.1",

		timber          : "4.7.0",
		gson            : "2.8.5"
]

def versionMajor = 0
def versionMinor = 4
def versionPatch = 6

android {
	compileSdkVersion versions.targetSdkVersion
	buildToolsVersion versions.buildtools
	defaultConfig {
		applicationId "com.dimowner.charttemplate"
		minSdkVersion versions.minSdkVersion
		targetSdkVersion versions.targetSdkVersion
		versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
		versionName "${versionMajor}.${versionMinor}.${versionPatch}"
	}

	signingConfigs {
		dev {
			storeFile file("key/debug/debug.keystore")
			storePassword "android"
			keyAlias "androiddebugkey"
			keyPassword "android"
		}
	}

	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
			useProguard true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//			debuggable true
		}
		debug {
			minifyEnabled false
		}
	}

	flavorDimensions "default"

	productFlavors {
		debugConfig {
			dimension "default"
			applicationId "com.dimowner.charttemplate.debug2"
			minSdkVersion versions.minSdkVersion
			targetSdkVersion versions.targetSdkVersion
			signingConfig = signingConfigs.dev
		}
		releaseConfig {
			dimension "default"
			signingConfig = signingConfigs.dev
			applicationId "com.dimowner.charttemplate"
			minSdkVersion versions.minSdkVersion
			targetSdkVersion versions.targetSdkVersion
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}

	lintOptions {
		checkReleaseBuilds false
		// Or, if you prefer, you can continue to check for errors in release builds,
		// but continue the build even when errors are found:
		abortOnError false
	}
}

// Remove not needed buildVariants.
android.variantFilter { variant ->
	if (variant.buildType.name == 'release'
			&& variant.getFlavors().get(0).name == 'debugConfig') {
		variant.setIgnore(true)
	}
	if (variant.buildType.name == 'debug'
			&& variant.getFlavors().get(0).name == 'releaseConfig') {
		variant.setIgnore(true)
	}
}

dependencies {
	//Timber
	implementation "com.jakewharton.timber:timber:$versions.timber"
	implementation "com.google.code.gson:gson:$versions.gson"
	implementation "com.android.support:recyclerview-v7:$versions.support"
}
